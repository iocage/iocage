.Dd April 20, 2017
.Dt IOCAGE 8
.Os
.Sh NAME
.Nm iocage
.Nd jail manager using ZFS and VNET
.Sh SYNOPSIS
.\" == HELP ==
.Nm
.Op Fl -help | Ar SUBCOMMAND Fl -help
.\" == VERSION ==
.Nm
.Op Fl v | -version
.Pp
.\" == ACTIVATE ==
.Nm
.Cm activate
.Ar ZPOOL
.\" == CHROOT ==
.Nm
.Cm chroot
.Ar UUID | TAG
.Op Ar COMMAND
.\" == CLEAN ==
.Nm
.Cm clean
.Op Fl a | -all
.Op Fl b | r | -base
.Op Fl f | -force
.Op Fl j | -jails
.Op Fl t | -template
.\" == CONSOLE ==
.Nm
.Cm console
.Op Fl f | -force
.Ar UUID | TAG
.\" == CREATE ==
.Nm
.Cm create
.Op Fl b | -basejail
.Op Fl c | -count
.Ar TEXT
.Op Fl e | -empty
.Op Fl p | -pkglist
.Ar TEXT
.Op Fl r | -release
.Op Fl f | -force
.Ar TEXT
.Op Fl s | -short
.Op Fl t | -template
.Ar TEXT
.Op Fl u | -uuid
.Ar TEXT
.Op Cm release Ns = Ns Ar RELEASE
.Op Cm pkglist Ns = Ns Ar FILE
.Op Cm property Ns = Ns Ar VALUE
.\" == DESTROY ==
.Nm
.Cm destroy
.Op Fl d | -download
.Op Fl f | -force
.Op Fl r | -release
.Ar UUID | TAG
.\" == DF ==
.Nm
.Cm df
.Op Fl H | h | -header
.Op Fl l | -long
.\" == EXEC ==
.Nm
.Cm exec
.Op Fl U | -jail_user
.Ar NAME
.Op Fl u | -host_user
.Ar NAME
.Ar ALL | TAG | UUID
.Cm COMMAND Op Ar ARGS
.\" == EXPORT ==
.Nm
.Cm export
.Ar UUID | TAG
.\" == FETCH ==
.Nm
.Cm fetch
.Op Fl -plugins
.Op Fl E | -eol
.Op Fl F | -files
.Ar TEXT
.Op Fl NE | -noeol
.Op Fl NU | -noupdate
.Op Fl NV | -noverify
.Op Fl P | -plugin-file
.Ar TEXT
.Op Fl U | -update
.Op Fl V | -verify
.Op Fl a | -auth
.Ar TEXT
.Op Fl c | -count
.Ar TEXT
.Op Fl d | -root-dir
.Ar TEXT
.Op Fl f | -file
.Op Fl h | -http
.Op Fl p | -password
.Ar TEXT
.Op Fl r | -release
.Ar TEXT
.Op Fl s | -server
.Ar TEXT
.Op Fl u | -user
.Ar TEXT
.Op Cm release Ns = Ns Ar RELEASE
.Op Cm ftphost Ns = Ns Ar ftp.hostname.org
.Op Cm ftpdir Ns = Ns Ar /dir/
.Op Cm ftpfiles Ns = Ns Ar "base.txz doc.txz lib32.txz src.txz"
.\" == FSTAB ==
.Nm
.Cm fstab
.Op Fl a | -add
.Op Fl e | -edit
.Op Fl r | -remove
.Ar JAIL
.Op Ar FSTAB_STRING
.\" == GET ==
.Nm
.Cm get
.Op Fl H | h | -header
.Op Fl P | -plugin
.Op Fl a | -all
.Op Fl p | -pool
.Op Fl r | -recursive
.Ar PROPERTY
.Op Ar all | UUID | TAG
.\" == IMPORT ==
.Nm
.Cm import
.Ar JAIL
.Op Ar Jail_value
.\" == LIST ==
.Nm
.Cm list
.Op Fl H | h | -header
.Op Fl P | -plugins
.Op Fl R | -remote
.Op Fl b | r | -base | -release
.Op Fl h | -http
.Op Fl l | -long
.Op Fl t | -template
.\" == MIGRATE ==
.Nm
.Cm migrate
.Op Fl d | -delete
.Op Fl f | -force
.\" == PKG ==
.Nm
.Cm pkg
.Ar JAIL
.Ar COMMAND
.\" == RESTART ==
.Nm
.Cm restart
.Op Fl s | -soft
.Op Ar UUID | TAG
.\" == ROLLBACK ==
.Nm
.Cm rollback
.Op Fl f | -force
.Op Fl n | -name
.Ar SNAPSHOT
.Op Ar UUID | TAG@snapshotname
.\" == SET ==
.Nm
.Cm set
.Op Fl P | -plugin
.Ar KEY
.Ar property_value
.Op Ar UUID | TAG
.\" == SNAPLIST ==
.Nm
.Cm snaplist
.Op Fl H | h | -header
.Op Ar UUID | TAG
.\" == SNAPREMOVE ==
.Nm
.Cm snapremove
.Op Fl n | -name
.Op Ar UUID | TAG@snapshotname | ALL
.\" == SNAPSHOT ==
.Nm
.Cm snapshot
.Op Fl n | -name
.Op Ar UUID | TAG | TAG@snapshotname
.\" == START ==
.Nm
.Cm start
.Op Fl -rc
.Op Ar UUID | TAG
.\" == STOP ==
.Nm
.Cm stop
.Op Fl -rc
.Op Ar UUID | TAG
.\" == UPDATE ==
.Nm
.Cm update
.Op Ar UUID | TAG
.\" == UPGRADE ==
.Nm
.Cm upgrade
.Op Fl r | -release
.Ar RELEASE
.Op Ar UUID | TAG
.Sh DESCRIPTION
.Nm
is a system administration tool designed to simplify jail management
tasks.
It abstracts out the management of ZFS-backed jails running VNET or
shared IP networking.
.Pp
Both shared IP jails and VNET jails are supported.
.Pp
Each jail has a unique ID (UUID) which is automatically generated at
creation time.
Using the UUID as a jail identifier makes it possible to replicate a
jail in a distributed environment with greater flexibility.
This also eliminates potential naming clashes on large scale deployments
and helps reduce operator error.
.Pp
Partial UUID calling is supported with every operation.
For example,
.Ar adae47cb-01a8-11e4-aa78-3c970ea3222f
can be used in the form of
.Ar adae47cb
or just
.Ar adae .
In addition to partial UUID calling, jail TAGs can be used
interchangeably.
.Pp
To ease jail identification, a TAG field is included in list mode which
can be set to any string (hostname, label, note, etc.).
If unset, the TAG field contains the creation date and time stamp by
default.
.Pp
Jails can be easily moved with ZFS
.Cm send
and
.Cm receive ,
preserving all of their properties automatically.
.Pp
.Nm
relies on ZFS and at least one ZFS pool must be present on the host
system.
Bridge interfaces like
.Pa bridge0
or
.Pa bridge1
are required for VNET and can be enabled by adding this line to
.Pa /etc/rc.conf :
.Bd -literal -offset indent
cloned_interfaces="bridge0 bridge1"
.Ed
.Pp
To enable all the features
.Nm
supports, consider building a kernel with these options:
.Bd -literal -offset indent
options         VIMAGE
options         RACCT
options         RCTL
.Ed
.Sh SUBCOMMANDS
.Bl -tag -width ".Cm activate"
.\" == Help ==
.It Fl -help
Display
.Nm
help text.
Including
.Fl -help
after a specific subcommand displays help text for that command.
.\" == VERSION ==
.It Fl -version
Display the
.Nm
version number.
.\" == ACTIVATE ==
.It Cm activate
Intended for use by automation tools.
The pool can be activated for
.Nm
jails without requiring user input.
By default, all other pools are deactivated.
.\" == CHROOT ==
.It Cm chroot
Chroot into a jail without actually starting the jail itself.
Useful for initial setup like setting a root password or configuring
networking.
A command can be specified as with the normal system
.Xr chroot 8 .
.\" == CLEAN ==
.It Cm clean
Destroy ZFS datasets.
.Pp
Options:
.Bl -tag -width "[-b | --base | -r]"
.It Op Fl a | -all
Destroys all created iocage data.
.It Op Fl b | r | -base
Destroys all fetched RELEASE jails.
.It Op Fl f | -force
Runs the command without any further user interaction.
.It Op Fl j | -jails
Destroys all created jails.
.It Op Fl t | -template
Destroys all templates.
.El
.\" == CONSOLE ==
.It Cm console
Execute login to have a shell inside the jail.
Use the
.Op Fl f | -force
option to run the command with no further user input.
.\" == CREATE ==
.It Cm create
Deploy a new jail based on the host operating system's release.
The default can be overridden by specifying the release option.
A fully independent jail set is created by default.
.Pp
Options:
.Bl -tag -width "[-b | --basejail]"
.It Op Fl b | -basejail
Create a new "basejail" with a common shared base.
.It Op Fl c | -count
Clone the jail from the current host's release, as determined by the
.Cm uname Fl r
command.
.It Op Fl e | -empty
Create an empty jail, which is used for unsupported or custom jails.
.It Op Fl p | -pkglist
.It Op Fl r | -release
Specify which release to use for the new jail.
.It Op Fl f | -force
Skip prompts, auto-confirming them with yes.
.It Op Fl s | -short
Use a short UUID of 8 characters instead of the default 36.
.It Op Fl t | -template
Create a template style jail.
Use the
.It Op Fl u | -uuid
option to add a specific UUID to the new jail.
.El
.Pp
Examples:
.Bl -item
.It
.Nm
create tag=www01 pkglist=$HOME/my-pkgs.txt
.It
.Nm
create -b tag=mybasejail
.El
.\" == DESTROY ==
.It Cm destroy
Destroy the specified jail.
This is not reversible, so use with caution.
If the jail is running, the destroy action fails.
.Pp
Options:
.Bl -tag -width "[-d | --download]"
.It Op Fl d | -download
Delete the download of the specified RELEASE as well.
.It Op Fl f | -force
Destroy the jail with no further warnings or user input.
.It Op Fl r | -release
Destroy a specified RELEASE dataset.
.El
.\" == DF ==
.It Cm df
Show resource usage of all jails.
Invoking
.Cm df
displays a table with several fields:
.Pp
.Bl -tag -width "UUID" -compact -offset indent
.It UUID
unique jail ID
.It CRT
compression ratio
.It RES
reserved space
.It QTA
disk quota
.It USE
used space
.It AVA
available space
.It TAG
jail name
.El
.Pp
Options:
.Bl -tag -width "[-H | -h | --header]"
.It Op Fl H | h | -header
Use when scripting, using tabs for separators.
.It Op Fl l | -long
Shows the full UUID.
.El
.\" == EXEC ==
.It Cm exec
Execute a command inside the specified jail.
This is an
.Nm
UUID/tag wrapper for
.Xr jexec 8 .
.Pp
Options:
.Bl -tag -width "[-u | --host_user]"
.It Op Fl U | -jail_user
Specifies which jail user runs the command.
.It Op Fl u | -host_user
Specify which host user runs the command.
.El
.\" == EXPORT ==
.It Cm export
Exports the specified jail.
An archive file is created in
.Pa /iocage/images
with a SHA256 checksum
The jail must be stopped before exporting.
.\" == FETCH ==
.It Cm fetch
Download and updates/patches releases.
.Pp
.Cm fetch
must be executed as the first command on a pristine system.
The host node's RELEASE is downloaded for deployment.
If other releases are required, this can be changed by supplying the
required release property or just selecting the appropriate RELEASE from
the menu list.
.Pp
Options:
.Bl -tag -width "[-P | --plugin-file text]"
.It Op Fl -plugins
List all available plugins for creation.
.It Op Fl E | -eol
Enable End Of Life (EOL) checking upstream.
.It Op Fl F | -files
Specify the files to fetch from the mirror.
.It Op Fl NE | -noeol
Disable EOL checking upstream.
.It Op Fl NU | -noupdate
Disable updating the fetch item to the latest patch level.
.It Op Fl NV | -noverify
Disable verifying the SSL cert for HTTP fetching.
.It Op Fl P | -plugin-file
Specify which plugin file to use.
.It Op Fl U | -update
Update the fetch to the latest patch level.
.It Op Fl V | -verify
Enable verifying the SSL cert for HTTP fetching.
.It Op Fl a | -auth
Specifies the authentication method for HTTP fetching.
Current values are basic and digest.
.It Op Fl c | -count
.It Op Fl d | -root-dir
Specify the root directory containing all RELEASE files.
.It Op Fl f | -file
Use a local file directory for the root directory instead of FTP or HTTP.
.It Op Fl h | -http
Change
.Op Fl s | -server
to define an HTTP server instead of the default FTP.
.It Op Fl p | -password
Add a password, if required.
.It Op Fl r |-release
Define the
.Fx
release to fetch.
.It Op Fl s | -server
Define which FTP server to log into.
.It Op Fl u | -user
Define the user.
.El
.Pp
Examples:
.Bl -item
.It
.Nm
fetch release=10.1-RELEASE
.El
.Pp
.Cm fetch
is also used to update already downloaded releases.
To update a local release already present in
.Nm
.Po
.Cm iocage list -r
.Pc ,
run:
.Bl -item
.It
.Nm
fetch release=10.1-RELEASE
.El
.Pp
This example applies the latest patches to 10.1-RELEASE base.
Newly created jails or basejails will automatically have the latest
updates applied.
.\" == FSTAB ==
.It Cm fstab
Manipulates the fstab settings of a specific jail.
.Pp
Options:
.Bl -tag -width "[-r | --remove]"
.It Op Fl a | -add
Adds an entry to the specific jail
.Pa fstab
and mount it.
.It Op Fl e | -edit
Open the
.Pa fstab
file in the default editor.
.It Op Fl r | -remove
Remove an entry from a specific jail fstab and unmount it.
.El
.\" == GET ==
.It Cm get
Display the specified property.
.Pp
Options:
.Bl -tag -width "[-H | -h | --header]"
.It Op Fl H | h | -header
Used in scripting.
Use tabs for separators.
.It Op Fl P | -plugin
Get the specified key for a plugin jail.
.It Op Fl a | -all
Get all properties for the specified jail.
If accessing a nested key, use "." as a separator.
.It Op Fl p | -pool
Get the currently activated zpool.
.It Op Fl r | -recursive
Get the specified property for all jails.
.El
.\" == IMPORT ==
.It Cm import
Import a specific jail image.
Short UUIDs can be used, but do not specify the full filename, only the
UUID.
.\" == LIST ==
.It Cm list
List a specified dataset type.
By default, all jails are listed.
.Pp
Options:
.Bl -tag -width "[-H | -h | --header]"
.It Op Fl H | h | -header
Used in scripting.
Use tabs for separators.
.It Op Fl P | -plugins
Shows available plugins.
.It Op Fl R | -remote
Shows available RELEASE options for remote.
.It Op Fl b | r | -base | -release
List all bases.
.It Op Fl h | -http
Changes
.Op Fl R | -remote
to use HTTP.
.It Op Fl l | -long
Shows the full UUID and ip4 address.
.It Op Fl t | -template
Lists all templates.
.El
.\" == MIGRATE ==
.It Cm migrate
Migrate from the development version of iocage-legacy to the current jail format.
.Pp
Options:
.Bl -tag -width "[-d | --delete]"
.It Op Fl d | -delete
Destroy the old dataset after migration.
.It Op Fl f | -force
Bypass any further warning or required user interaction.
.El
.\" == PKG ==
.It Cm pkg
Run desired
.Cm pkg
commands in the specified jail.
.\" == RESTART ==
.It Cm restart
Restart the specified jail.
Use ALL to restart all jails.
.Pp
Options:
.Bl -tag -width "[-s | --soft]"
.It Op Fl s | -soft
Restart the jail, but do not tear down the network stack.
.El
.\" == ROLLBACK ==
.It Cm rollback
Roll back a jail to an existing snapshot.
Any intermediate snapshots are destroyed in the process.
For more information on this functionality, please see
.Xr zfs 8 .
.Pp
Options:
.Bl -tag -width "[-f | --force]"
.It Op Fl f | -force
Run the command, skipping any warnings or further user interaction.
.It Op Fl n | -name
[Required] Used to specify the snapshot name.
.El
.\" == SET ==
.It Cm set
Set the specified property in the desired jail.
.Pp
Options:
.Bl -tag -width "[-P | --plugin]"
.It Op Fl P | -plugin
Set the specified key for a plugin jail.
If accessing a nested key, use "." as a separator.
.El
.Pp
Example:
.Bl -item
.It
.Nm
set -P foo.bar.baz=VALUE PLUGIN
.El
.\" == SNAPLIST ==
.It Cm snaplist
List snapshots of a jail.
A number of different fields are displayed:
.Pp
.Bl -tag -width "CREATED" -compact -offset indent
.It NAME
snapshot name
.It CREATED
creation time
.It RSIZE
referenced size
.It USED
used space
.El
.Pp
Options:
.Bl -tag -width "[-H | -h | --delete]"
.It Op Fl H | h | -header
Used for scripting.
Tabs are used as separators.
.El
.\" == SNAPREMOVE ==
.It Cm snapremove
Delete snapshots of the specified jail.
If the keyword
.Ar ALL
is used, all snapshots the specified jail are deleted.
.Pp
Options:
.Bl -tag -width "[-n | --name]"
.It Op Fl n | -name
[Required] The snapshot name.
.El
.\" == SNAPSHOT ==
.It Cm snapshot
Create a ZFS snapshot of the specified jail.
If a snapshot name is not specified, a name based on the current
date and time is generated.
.Pp
Options:
.Bl -tag -width "[-n | --name]"
.It Op Fl n | -name
The user created snapshot name.
.El
.\" == START ==
.It Cm start
Start a jail identified by
.Ar UUID
or
.Ar TAG
.  Use ALL to start all installed jails.
.Pp
Options:
.Bl -tag -width "[--rc]"
.It Op Fl -rc
Start all jails with boot=on in a specific order.
Jails with lower priority start first.
.El
.\" == STOP ==
.It Cm stop
Stop a jail identified by
.Ar UUID
or
.Ar TAG
.  Use ALL to stop all active jails.
.Pp
Options:
.Bl -tag -width "[--rc]"
.It Op Fl -rc
Stop all jails with boot=on in a specific order.
Jails with higher priority values stop first.
.El
.\" == UPDATE ==
.It Cm update
Run
.Cm freebsd-update
to update the specified jail to the latest patch level.
A backup snapshot is automatically created to provide a rollback
option.
.\" == UPGRADE ==
.It Cm upgrade
Run
.Cm freebsd-update to upgrade a jail RELEASE to the specified
RELEASE.
.Pp
.Bl -item
.It
.Nm
set release=10.1-RELEASE UUID|TAG
.El
.Pp
For this, the release must be locally available.
.Pp
Options:
.Bl -tag -width "[-r | --release TEXT]"
.It Op Fl r | -release
[Required] RELEASE the jail uses for upgrading.
.El
.El
.Sh PROPERTIES
The Source listed with each property shows whether it is a local
.Nm
property or where more information can be located.
.Bl -tag -width "pkglist=none"
.It pkglist=none | path-to-file
A json file listing one package per entry.
Packages are automatically installed when a jail is created.
Works only in combination with the
.Cm create
subcommand.
.Pp
Default: none
.Pp
Source: local
.It vnet=on | off
Controls whether the jail is started with a VNET or a shared IP
configuration.
The default is to auto-guess from a sysctl.
If a fully virtualized per-jail network stack is not needed, set this
to off.
.Pp
Default: auto-guess
.Pp
Source: local
.It ip4_addr="interface|ip-address/netmask"
The IPv4 address for VNET and shared IP jails.
.Pp
Single interface format:
.Pp
interface|ip-address/netmask
.Pp
Multiple interface format:
.Pp
interface|ip-address/netmask,interface|ip-address/netmask
.Pp
On shared IP jails, an interface name given before the IP address
adds an alias to that interface.
If the DEFAULT keyword is given instead of an interface name, the
interface is automatically assigned based on the system's default
interface.
.Pp
A netmask in either dotted-quad or CIDR form given after the IP
address is used when adding the IP alias.
.Pp
The IP address is automatically assigned at the first start of the jail.
This requires that the
.Dv ip4_autostart
and
.Dv ip4_autoend
variables are set on the "default" property source.
If used, the IP4 address is set to the first available based upon the
given range and existing jails.
.Pp
Example:
.Bd -literal -offset indent
.Pp
.Nm
set ip4_autostart="100" default
.Pp
.Nm
set ip4_autoend="150" default
.Pp
.Nm
set ip4_autosubnet="24" default
.Ed
.Pp
This results in the automatic IPv4 address being assigned in the base
range of the default network interface.
That is, if the local default NIC is set to 192.168.0.XXX, then the new
address will be 192.168.0.[100-150]/24.
.Pp
In VNET jails, the interface is configured with the IP addresses listed.
.Pp
Example:
.Bd -literal -offset indent
"vnet0|192.168.0.10/24,vnet1|10.1.1.10/24"
.Ed
.Pp
Interfaces vnet0 and vnet1 are configured in a VNET jail.
In this case, no network configuration is necessary in the jail's
.Pa rc.conf
file.
.Pp
Default: none
.Pp
Source:
.Xr jail 8
.It ip4_saddrsel=1 | 0
Only applies when vnet=off.
A boolean option to change the formerly mentioned behavior and
disable IPv4 source address selection for the prison in favor of
the primary IPv4 address of the jail.
Source address selection is enabled by default for all jails and
the ip4_nosaddrsel settting of a parent jail is not inherited for
any child jails.
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It ip4=new | disable | inherit
Only applies when vnet=off.
Control the availability of IPv4 addresses.
Possible values are "inherit" to allow unrestricted access to all
system addresses, "new" to restrict addresses via ip4.addr above,
and "disable" to stop the jail from using IPv4 entirely.
Setting the ip4.addr parameter implies a value of "new".
.Pp
Default: new
.Pp
Source:
.Xr jail 8
.It defaultrouter=none | ipaddress
Setting this property to anything other than none configures a
default route inside a VNET jail.
.It defaultrouter6=none | ip6address
Setting this property to anything other than none configures a
default IPv6 route inside a VNET jail.
.It resolver=none | nameserver IP;nameserver IP;search domain.local
Set the jail's resolver
.Pq resolv.conf .
Fields must be delimited with a semicolon.
Semicolons are translated to newlines in
.Pa resolv.conf .
.Pp
If the resolver is set to none (default) the jail inherits the
.Pa resolv.conf
file from the host.
.It ip6.addr, ip6.saddrsel, ip6
A set of IPv6 options for the prison, the counterparts to ip4.addr,
ip4.saddrsel and ip4 above.
.It interfaces=vnet0:bridge0,vnet1:bridge1 | vnet0:bridge0
By default, there are two interfaces specified with their bridge
association.
Up to four interfaces are supported.
Interface configurations are separated by commas.
The format is interface:bridge, where the left value is the virtual
VNET interface name and the right value is the bridge name where the
virtual interface should be attached.
.Pp
Default: vnet0:bridge0,vnet1:bridge1
.Pp
Source: local
.It host_domainname=
The NIS domain name of the jail.
.Pp
Default: none
.Pp
Source:
.Xr jail 8
.It host_hostname=UUID
The hostname of the jail.
.Pp
Default: UUID
.Pp
Source:
.Xr jail 8
.It exec_fib=0 | 1 ..
The FIB (routing table) to set when running commands inside the jail.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It devfs_ruleset=4 | 0 ..
The number of the devfs ruleset that is enforced for mounting
devfs in this jail.
A value of zero (default) means no ruleset is enforced.
Descendent jails inherit the parent jail's devfs ruleset enforcement.
Mounting devfs inside a jail is possible only if the allow_mount and
allow_mount_devfs permissions are effective and enforce_statfs is set
to a value lower than 2.
Devfs rules and rulesets cannot be viewed or modified from inside a
jail.
.Pp
NOTE: It is important that only appropriate device nodes in devfs
be exposed to a jail.
Access to disk devices in the jail may permit processes in the jail
to bypass the jail sandboxing by modifying files outside of the jail.
See
.Xr devfs 8
for information on how to use devfs rules to limit access to entries
in the per-jail devfs.
A simple devfs ruleset for jails is available as ruleset 4 in
.Pa /etc/defaults/devfs.rules
.Pp
Default: 4
.Pp
Source:
.Xr jail 8
.It mount_devfs=1 | 0
Mount a
.Xr devfs 5
filesystem on the chrooted
.Pa /dev
directory, and apply the ruleset in the devfs_ruleset parameter (or
a default of ruleset 4: devfsrules_jail) to restrict the devices
visible inside the jail.
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It exec_start="/bin/sh /etc/rc"
Commands to run in the prison environment when a jail is created.
A typical command to run is
.Cm sh /etc/rc
.Pp
Default: /bin/sh /etc/rc
.Pp
Source:
.Xr jail 8
.It exec_stop="/bin/sh /etc/rc.shutdown"
Commands to run in the prison environment before a jail is
removed and after any exec_prestop commands have completed.
A typical command to run is
.Cm sh /etc/rc.shutdown
.Pp
Default: /bin/sh /etc/rc.shutdown
.Pp
Source:
.Xr jail 8
.It exec_prestart="/usr/bin/true"
Commands to run in the system environment before a jail is started.
.Pp
Default: /usr/bin/true
.Pp
Source:
.Xr jail 8
.It exec_prestop="/usr/bin/true"
Commands to run in the system environment before a jail is stopped.
.Pp
Default: /usr/bin/true
.Pp
Source:
.Xr jail 8
.It exec_poststop="/usr/bin/true"
Commands to run in the system environment after a jail is stopped.
.Pp
Default: /usr/bin/true
.Pp
Source:
.Xr jail 8
.It exec_poststart="/usr/bin/true"
Commands to run in the system environment after a jail is started,
and after any exec_start commands have completed.
.Pp
Default: /usr/bin/true
.Pp
Source: jail 8
.It exec_clean=1 | 0
Run commands in a clean environment.
The environment is discarded except for HOME, SHELL, TERM and USER.
HOME and SHELL are set to the target login's default values.
USER is set to the target login.
TERM is imported from the current environment.
The environment variables from the login class capability database
for the target login are also set.
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It exec_timeout=60 | 30 ..
The maximum amount of time to wait for a command to complete.
If a command is still running after this many seconds have passed,
the jail will be terminated.
.Pp
Default: 60
.Pp
Source:
.Xr jail 8
.It stop_timeout=30 | 60 ..
The maximum amount of time to wait for a jail's processes to
exit after sending them a SIGTERM signal.
This happens after the exec_stop commands have completed.
After this many seconds have passed, the jail is removed, killing any
remaining processes.
If this is set to zero, no SIGTERM is sent and the prison is
immediately removed.
.Pp
Default: 30
.Pp
Source:
.Xr jail 8
.It exec_jail_user=root
In the jail environment, commands are run as this user.
.Pp
Default: root
.Pp
Source:
.Xr jail 8
.It exec_system_jail_user=0 | 1
This boolean option looks for the
.Dv exec_jail_user
in the system
.Xr passwd 5
file rather than the jail's file.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It exec_system_user=root
Run commands as this user in the system environment.
The default is to run commands as the current user.
.Pp
Default: root
.Pp
Source:
.Xr jail 8
.It mount_fdescfs=1 | 0
Mount a
.Xr fdescfs 5
filesystem in the jail's
.Pa /dev/fd
directory.
Note: This is not supported on
.Fx 9.3 .
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It mount_procfs=0 | 1
Mount a
.Xr procfs 5
filesystem in the jail's
.Pa /dev/proc
directory.
.Pp
Default: 0
.Pp
Source: local
.It enforce_statfs=2 | 1 | 0
Determine which information processes in a jail are able to obtain
about mount points.
The behavior of these syscalls is affected:
.Xr statfs 2 ,
.Xr fstatfs 2 ,
.Xr getfsstat 2 ,
and
.Xr fhstatfs 2
as well as similar compatibility syscalls.
When set to 0, all mount points are available without any
restrictions.
When set to 1, only mount points below the jail's chroot directory
are visible.
Additionaly, the path to the jail's chroot directory is removed
from the front of their pathnames.
When set to 2 (default), the syscalls above can operate only on a
mountpoint where the jail's chroot directory is located.
.Pp
Default: 2
Source:
.Xr jail 8
.It children_max=0 | ..
The number of child jails allowed to be created by this jail (or
by other jails under this jail).
This limit is zero by default, indicating the jail is not allowed to
create child jails.
See the Hierarchical Jails section for more information in
.Xr jail 8 .
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It login_flags="-f root"
These flags are passed to
.Xr login 1
when logging in to jails with the console function.
.Pp
Default: -f root
.Pp
Source:
.Xr login 1
.It jail_zfs=on | off
Enable automatic ZFS jailing inside the jail.
The assigned ZFS dataset is fully controlled by the jail.
.Pp
NOTE: Setting this to on automatically enables allow_mount=1,
enforce_statfs=1, and allow_mount_zfs=1!
These are dependent options required for ZFS management inside a jail.
.Pp
Default: off
.Pp
Source: local
.It jail_zfs_dataset=iocage/jails/UUID/root/data | zfs_filesystem
The dataset to be jailed and fully handed over to a jail.
Takes the ZFS filesystem name without pool name.
.Pp
NOTE: only valid if jail_zfs=on.
By default, the mountpoint is set to none.
To mount this dataset, set its mountpoint inside the jail.
For example,
.Bd -literal -offset indent
zfs set mountpoint=/data full-dataset-name
mount -a
.Ed
.Pp
Default: iocage/jails/UUID/root/data
.Pp
Source: local
.It securelevel=3 | 2 | 1 | 0 | -1
The value of the jail's kern.securelevel sysctl.
A jail never has a lower securelevel than the default system, but by
setting this parameter it is allowed to have a higher one.
If the system securelevel is changed, any jail securelevels will be at
least as secure.
.Pp
Default: 2
.Pp
Source:
.Xr jail 8
.It allow_set_hostname=1 | 0
Allow the jail's hostname to be changed with
.Xr hostname 1
or
.Xr sethostname 3 .
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It allow_sysvipc=0 | 1
Set whether a process in the jail has access to System V IPC primitives.
Prior to FreeBSD 11.0, System V primitives share a single namespace
across the host and jail environments, meaning that processes within a
jail would be able to communicate with, and potentially interfere with,
processes outside of the jail, or in other jails.
In
.Fx 11.0
and later, this setting is deprecated.
Use sysvmsg, sysvsem, and sysvshm instead.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It sysvmsg=disable | inherit | new
Allow access to SYSV IPC message primitives.
When set to inherit, all IPC objects on the system are visible to this
jail, whether they were created by the jail itself, the base system,
or other jails.
When set to new, the jail has its own key namespace, and can only see
the objects that it has created.
The system or parent jail has access to the jail's objects, but not to
its keys.
When set to disable, the jail cannot perform any sysvmsg-related system
calls.
Ignored in
.Fx
10.3 and earlier.
.Pp
Default: disable
.Pp
Source:
.Xr jail 8
.It sysvsem=disable | inherit | new
Allow access to SYSV IPC semaphore primitives in the same manner as
sysvmsg.
Ignored in
.Fx
10.3 and earlier.
.Pp
Default: disable
.Pp
Source:
.Xr jail 8
.It sysvshm=disable | inherit | new
Allow access to SYSV IPC shared memory primitives in the same manner
as sysvmsg.
Ignored in
.Fx 10.3
and earlier.
.Pp
Default: disable
Source:
.Xr jail 8
.It allow_raw_sockets=0 | 1
The prison root is allowed to create raw sockets.
Setting this parameter allows utilities like
.Xr ping 8
and
.Xr traceroute 8
to operate inside the prison.
If set, the source IP addresses are enforced to comply with the IP
address bound to the jail, regardless of whether the IP_HDRINCL flag
has been set on the socket.
Since raw sockets can be used to configure and interact with various
network subsystems, extra caution should be used where privileged
access to jails is given out to untrusted parties.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It allow_chflags=0 | 1
Normally, privileged users inside a jail are treated as unprivileged
by
.Xr chflags 2 .
When this parameter is set, such users are treated as privileged, and
can manipulate system file flags subject to the usual constraints on
kern.securelevel.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It allow_mount=0 | 1
Allow privileged users inside the jail to mount and unmount filesystem
types marked as jail-friendly.
The
.Xr lsvfs 1
command can be used to find filesystem types available for mount from
within a jail.
This permission is effective only if enforce_statfs is set to a value
lower than 2.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It allow_mount_devfs=0 | 1
Allow privileged users inside the jail to mount and unmount the devfs
file system.
This permission is effective only together with allow.mount and if
enforce_statfs is set to a value lower than 2.
Please consider restricting the devfs ruleset with the
 devfs_ruleset option.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It allow_mount_nullfs=0 | 1
Allow privileged users inside the jail to mount and unmount the nullfs
file system.
This permission is effective only together with allow_mount and if
enforce_statfs is set to a value lower than 2.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It allow_mount_procfs=0 | 1
Allow privileged users inside the jail to mount and unmount the procfs
file system.
This permission is effective only together with allow.mount and if
enforce_statfs is set to a value lower than 2.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It allow_mount_tmpfs=0 | 1
Allow privileged users inside the jail to mount and unmount the tmpfs
file system.
This permission is effective only together with allow.mount and if
enforce_statfs is set to a value lower than 2.
.Pp
Note: This is not supported on FreeBSD 9.3.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It allow_mount_zfs=0 | 1
Allow privileged users inside the jail to mount and unmount the ZFS
filesystem.
This permission is effective only together with allow.mount and if
.Dv enforce_statfs
is set to a value lower than 2.
See
.Xr zfs 8
for information on how to configure the ZFS filesystem to operate from
within a jail.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It allow_quotas=0 | 1
The jail root can administer quotas on the jail's filesystems.
This includes filesystems that the jail might share with other jails
or with non-jailed parts of the system.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It allow_socket_af=0 | 1
Sockets within a jail are normally restricted to IPv4, IPv6, local
(UNIX), and route.
This setting allows access to other protocol stacks that have not had
jail functionality added to them.
.Pp
Default: 0
.Pp
Source: .Xr jail 8
.It host_hostuuid=UUID
.Pp
Default: UUID
.Pp
Source:
.Xr jail 8
.It tag="any string"
Custom string for aliasing jails.
.Pp
Default: date@time
.Pp
Source: local
.It template=yes | no
This property controls whether the jail is a template.
Templates are not started by iocage.
Set to yes if this jail will be converted into a template.
See the EXAMPLES section below.
.Pp
Default: no
.Pp
Source: local
.It boot=on | off
If set to "on", the jail is auto-started at boot time with
.Cm start --rc
and stopped at shutdown time with
.Cm stop --rc .
Jails are started and stopped based on their priority value.
.Pp
Default: off
.Pp
Source: local
.It notes="any string"
Custom notes for miscellaneous tagging.
.Pp
Default: none
.Pp
Source: local
.It owner=root
The owner of the jail.
Can be any string.
.Pp
Default: root
.Pp
Source: local
.It priority=99 | 50 ..
Start priority at boot time.
Smaller values mean higher priority.
For shutdown, the order is reversed.
.Pp
Default: 99.
.Pp
Source: local
.It last_started
Last successful start time.
Automatically set every time the jail starts.
.Pp
Default: timestamp
.Pp
Source: local
.It type=basejail,empty,normal
Set the jail type to basejail, empty or normal.
.Pp
Default: normal
.Pp
Source: local
.It release=10.0-RELEASE | 9.2-RELEASE
The release used at creation time.
Can be set to any string if needed.
.Pp
Default: the host's release
.Pp
Source: local
.It compression=on | off | lzjb | gzip | gzip-N | zle | lz4
Controls the compression algorithm used for this dataset.
The lzjb compression algorithm is optimized for performance while
providing decent data compression.
Setting compression to on uses the lzjb compression algorithm.
The gzip algorithm uses the same compression as the
.Xr gzip 1
command.
The compression level can be specified by using the value gzip-N,
where N is an integer from 1 (fastest) to 9 (best compression
ratio).
Currently, gzip is equivalent to gzip-6, which is also the default for
.Xr gzip 1 .
.Pp
The zle algorithm compresses runs of zeros.
.Pp
The lz4 algorithm is a high-performance replacement for the lzjb algorithm.
It features significantly faster compression and decompression, as well
as a moderately higher compression ratio than lzjb, but can only be used
on pools with the lz4_compress feature enabled.
See
.Xr zpool-features 7
for details on ZFS feature flags and the lz4_compress feature.
.Pp
This property can also be referred to by its shortened column name of
"compress".
.Pp
Changing this property affects only newly-written data.
.Pp
Default: lz4
.Pp
Source:
.Xr zfs 8
.It origin
This is only set for clones and is read-only.
For cloned file systems or volumes, the snapshot from which the clone
was created.
See the clones property.
.Pp
Default: -
.Pp
Source:
.Xr zfs 8
.It quota=15G | 50G | ..
Quota for the jail.
Limit the amount of space a dataset and its descendants can consume.
This property enforces a hard limit on the amount of space used.
This includes all space consumed by descendants, including file systems
and snapshots.
Setting a quota on a descendent of a dataset that already has a quota
does not override the ancestor's quota, but rather imposes an additional
limit.
.Pp
Default: none
.Pp
Source:
.Xr zfs 8
.It mountpoint
Path for the jail's root filesystem.
Do not tweak this or the jail will not start!
.Pp
Default: set to jail's root
.Pp
Source:
.Xr zfs 8
.It compressratio
Compression ratio.
Read-only.
For non-snapshots, the compression ratio achieved for the used space
of this dataset, expressed as a multiplier.
The used property includes descendant datasets, and, for clones, does not
include the space shared with the origin snapshot.
.Pp
Source:
.Xr zfs 8
.It available
Available space in the jail's dataset.
The amount of space available to the dataset and all its children,
assuming that there is no other activity in the pool.
Because space is shared within a pool, availability can be limited by any
number of factors, including physical pool size, quotas, reservations,
or other datasets within the pool.
.Pp
Source:
.Xr zfs 8
.It used
Space used by jail.
Read-only.
.Pp
Source:
.Xr zfs 8
.It dedup=on | off | verify | sha256[,verify]
Deduplication for jail.
.Pp
Default: off
.Pp
Source:
.Xr zfs 8
.It reservation=size | none
Reserved space for jail.
.Pp
Default: none
.Pp
Source:
.Xr zfs 8
.It sync_target
This is for future use, currently not supported.
.It sync_tgt_zpool
For future use, currently not supported.
.It cpuset=1 | 1,2,3,4 | 1-2 | off
.Pp
Control the jail's CPU affinity.
.Pp
Default: off
.Pp
Source:
.Xr cpuset 1
.El
.Sh EXAMPLES
Set up
.Nm
from scratch:
.Bd -literal -offset indent
iocage fetch
.Ed
.Pp
Create first jail:
.Bd -literal -offset indent
iocage create -r 11.0-RELEASE tag=myjail
.Ed
.Pp
List jails:
.Bd -literal -offset indent
iocage list
.Ed
.Pp
Start jail:
.Bd -literal -offset indent
iocage start UUID
.Ed
.Pp
Convert jail into template:
.Bd -literal -offset indent
iocage set template=yes UUID
.Ed
.Pp
List templates:
.Bd -literal -offset indent
iocage list -t
.Ed
.Pp
Import package on another host
.Bd -literal -offset indent
iocage import UUID
.Ed
.Sh HINTS
When using VNET, remember to add the node's physical NIC into one
of the bridges if an outside connection is needed.
Also see
.Xr bridge 4
for how traffic is handled.
In a nutshell: bridges behave like a network switch.
.Pp
The PF firewall is not supported inside VNET jails as of July 2014.
PF can be enabled for the host.
IPFW is fully supported inside a VNET jail.
.Pp
The actual jail name in the
.Xr jls 8
output is set to ioc-UUID.
This is a required workaround as jails refuse to start with
.Xr jail 8
when the jail name starts with a "0".
.Pp
.Xr dmesg 8
information leakage inside jails can be prevented with this sysctl:
.Bd -literal -offset indent
security.bsd.unprivileged_read_msgbuf=0
.Ed
.Pp
When using VNET, consider applying these sysctls as well:
.Bd -literal -offset indent
net.inet.ip.forwarding=1
net.link.bridge.pfil_onlyip=0
net.link.bridge.pfil_bridge=0
net.link.bridge.pfil_member=0
.Ed
.Pp
For more information, please see
.Lk https://github.com/iocage/iocage
.Sh SEE ALSO
.Xr cpuset 1 ,
.Xr bridge 4 ,
.Xr epair 4 ,
.Xr freebsd-update 8 ,
.Xr ifconfig 8 ,
.Xr jail 8 ,
.Xr jexec 8 ,
.Xr rctl 8 ,
.Xr sysctl 8 ,
.Xr zfs 8 ,
.Xr zpool 8
.Sh BUGS
Please report bugs, issues, and feature requests at
.Lk https://github.com/iocage/iocage/issues
.Sh AUTHORS
.An Peter Toth
.An Brandon Schneider
.Sh SPECIAL THANKS
Sichendra Bista - for his ever willing attitude and ideas.
