.Dd September 19, 2020
.Dt IOCAGE 8
.Os
.Sh NAME
.Nm iocage
.Nd jail manager using ZFS and VNET
.Sh SYNOPSIS
.\" == DEBUG ==
.Nm
.Op Fl D | -debug
.\" == HELP ==
.Nm
.Op Fl -help | Ar SUBCOMMAND Fl -help
.\" == VERSION ==
.Nm
.Op Fl v | -version
.Pp
.\" == ACTIVATE ==
.Nm
.Cm activate
.Ar ZPOOL
.\" == CHROOT ==
.Nm
.Cm chroot
.Ar UUID | NAME
.Op Ar COMMAND
.\" == CLEAN ==
.Nm
.Cm clean
.Op Fl a | -all | Cm dataset_type
.Op Fl b | r | -base | Cm dataset_type
.Op Fl f | -force
.Op Fl j | -jails |  Cm dataset_type
.Op Fl t | -template | Cm dataset_type
.\"== CLONE ==
.Nm
.Cm clone
.Ar UUID | NAME Op Ar PROPERTIES
.Op Fl c | -count Ar TEXT
.\" == CONSOLE ==
.Nm
.Cm console
.Op Fl f | -force
.Ar UUID | NAME
.\" == CREATE ==
.Nm
.Cm create
.Op Fl b | -basejail
.Op Fl c | -count Ar TEXT
.Op Fl e | -empty
.Op Fl f | -force
.Op Fl n | -name Ar TEXT
.Op Fl p | -pkglist Ar TEXT
.Op Fl r | -release Ar TEXT
.Op Fl r | -release Cm latest | Cm LATEST
.Op Fl s | -short
.Op Fl t | -template Ar TEXT
.Op Fl B | -clone_basejail
.Op Fl T | -thickjail
.Op Fl u | -uuid | Ar TEXT
.Op Ar PROPERTIES
.\" == DESTROY ==
.Nm
.Cm destroy
.Op Fl R | -recursive
.Op Fl d | -download
.Op Fl f | -force
.Op Fl r | -release
.Ar UUID | NAME
.\" == DF ==
.Nm
.Cm df
.Op Fl H | h | -header
.Op Fl l | -long
.Op Fl s | -sort Ar TEXT
.\" == EXEC ==
.Nm
.Cm exec
.Op Fl f | -force
.Op Fl U | -jail_user Ar NAME
.Op Fl u | -host_user Ar NAME
.Ar UUID | NAME
.Cm -- COMMAND Op Ar ARGS
.\" == EXPORT ==
.Nm
.Cm export
.Ar UUID | NAME
.\" == FETCH ==
.Nm
.Cm fetch
.Op Fl -accept
.Op Fl -noaccept
.Op Fl -plugins Ar OPTIONS
.Op Fl -plugins Fl -official Ar OPTIONS
.Op Fl E | -eol
.Op Fl F | -files
.Op Fl NE | -noeol
.Op Fl NU | -noupdate
.Op Fl NV | -noverify
.Op Fl P | -plugin-file
.Op Fl U | -update
.Op Fl V | -verify
.Op Fl a | -auth
.Op Fl c | -count
.Op Fl d | -root-dir
.Op Fl f | -file
.Op Fl h | -http
.Op Fl n | -name TEXT
.Op Fl p | -password
.Op Fl r | -release | Cm latest | Cm LATEST
.Op Fl s | -server
.Op Fl u | -user
.\" == FSTAB ==
.Nm
.Cm fstab
.Ar JAIL
.Ar FSTAB_STRING
.Op Fl H | h | -header
.Op Fl R | -replace
.Op Fl a | -add | Cm action
.Op Fl e | -edit | Cm action
.Op Fl l | -list
.Op Fl r | -remove | Cm action
.\" == GET ==
.Nm
.Cm get
.Ar PROPERTY
.Ar UUID | NAME
.Op Fl H | h | -header
.Op Fl P | -plugin Op Fl f | -force
.Op Fl a | -all
.Op Fl p | -pool
.Op Fl r | -recursive
.Op Fl s | Cm state
.Op Fl j | Cm JID
.\" == IMPORT ==
.Nm
.Cm import
.Ar UUID | NAME
.\" == LIST ==
.Nm
.Cm list
.Op Fl -http
.Op Fl H | h | -header
.Op Fl P | -plugins
.Op Fl R | -remote
.Op Fl b | r | -base | -release | Cm dataset_type
.Op Fl l | -long
.Op Fl q | -quick
.Op Fl s | -sort
.Op Fl t | -template | Cm dataset_type
.Op Fl PRO
.\" == MIGRATE ==
.Nm
.Cm migrate
.Op Fl d | -delete
.Op Fl f | -force
.\" == PKG ==
.Nm
.Cm pkg
.Ar UUID | NAME
.Ar COMMAND
.\"== RENAME ==
.Nm
.Cm rename
.Ar UUID | NAME
.Ar NEW_NAME
.\" == RESTART ==
.Nm
.Cm restart
.Op Fl s | -soft
.Ar UUID | NAME
.\" == ROLLBACK ==
.Nm
.Cm rollback
.Op Fl f | -force
.Fl n | -name Ar TEXT
.Ar UUID | NAME
.\" == SET ==
.Nm
.Cm set
.Ar PROPERTY Op ...
.Ar UUID | NAME
.Op Fl P | -plugin Ar KEY
.\" == SNAPLIST ==
.Nm
.Cm snaplist
.Ar UUID | NAME
.Op Fl H | h | -header
.Op Fl l | -long
.Op Fl s | -sort Cm TYPE
.\" == SNAPREMOVE ==
.Nm
.Cm snapremove
.Op Fl n | -name Ar TEXT
.Ar UUID | NAME | ALL
.\" == SNAPSHOT ==
.Nm
.Cm snapshot
.Op Fl n | -name Ar TEXT
.Ar UUID | NAME
.\" == START ==
.Nm
.Cm start
.Op Fl -rc
.Op Ar UUID | NAME | ALL
.\" == STOP ==
.Nm
.Cm stop
.Op Fl -rc
.Op Ar UUID | NAME | ALL
.\" == UPDATE ==
.Nm
.Cm update
.Ar UUID | NAME
.\" == UPGRADE ==
.Nm
.Cm upgrade
.Ar UUID | NAME
.Fl r | -release Ar RELEASE
.Sh DESCRIPTION
.Nm
is a system administration tool designed to simplify jail management
tasks.
It abstracts out the management of ZFS-backed jails running VNET or
shared IP networking.
.Pp
Both shared IP jails and VNET jails are supported.
.Pp
Each jail has a unique ID (UUID) which is automatically generated at
creation time.
Using the UUID as a jail identifier is more flexible when replicating
a jail in a distributed environment.
This also eliminates potential naming clashes on large scale
deployments and helps reduce operator error.
.Pp
Partial UUID calling is supported with every operation.
For example,
.Ar adae47cb-01a8-11e4-aa78-3c970ea3222f
can be used in the form of
.Ar adae47cb
or just
.Ar adae .
In addition to partial UUID calling, jail NAMEs can also be used.
.Pp
Jails can be easily moved with ZFS
.Cm send
and
.Cm receive ,
preserving all of their properties automatically.
.Pp
.Nm
relies on ZFS and at least one ZFS pool must be present on the host
system.
Bridge interfaces like
.Pa bridge0
or
.Pa bridge1
are required for VNET and can be enabled by adding this line to
.Pa /etc/rc.conf :
.Bd -literal -offset indent
cloned_interfaces="bridge0 bridge1"
.Ed
.Pp
To enable all the features
.Nm
supports, consider building a kernel with these options:
.Bd -literal -offset indent
options         VIMAGE
options         RACCT
options         RCTL
.Ed
.Sh SUBCOMMANDS
.Bl -tag -width ".Cm activate"
.\" == Debug ==
.It Fl D | -debug
Log
.Nm
debug output to the console.
.\" == Help ==
.It Fl -help
Display
.Nm
help text.
Including
.Fl -help
after a specific subcommand displays help text for that command.
.\" == VERSION ==
.It Fl -version
Display the
.Nm
version number.
.\" == ACTIVATE ==
.It Cm activate
Intended for use by automation tools.
The pool can be activated for
.Nm
jails without requiring user input.
By default, all other pools are deactivated.
.Pp
Example:
.Pp
.Dl # iocage activate examplezpool
.Pp
.\" == CHROOT ==
.It Cm chroot
Chroot into a jail without actually starting the jail itself.
Useful for initial setup like setting a root password or configuring
networking.
A command can be specified as with the normal system, see
.Xr chroot 8 .
.Pp
Example:
.Pp
.Dl # iocage chroot 6ffe99a9 ls
.Pp
Run
.Cm ls
in the jail identified by the shortened UUID.
.\" == CLEAN ==
.It Cm clean
Destroy ZFS datasets.
.Pp
Options:
.Bl -tag -width "[-b | --base | -r | dataset_type]"
.It Op Fl a | -all | Cm dataset_type
Destroys all created iocage data.
.It Op Fl b | r | -base | Cm dataset_type
Destroys all fetched RELEASE jails.
.It Op Fl f | -force
Runs the command without any further user interaction.
.It Op Fl j | -jails | Cm dataset_type
Destroys all created jails.
.It Op Fl t | -template | Cm dataset_type
Destroys all templates.
.El
.Pp
Example:
.Pp
.Dl # iocage clean -j
.Pp
Destroys all created jails on the system, after a prompt ensures this
is the desired action.
.Pp
.\"== CLONE ==
.It Cm clone
Clone a jail.
Properties can be configured for the clone by listing them after the
.Ar UUID | NAME .
.Pp
Options:
.Bl -tag -width "[-c | --count TEXT]"
.It Op Fl c | -count Ar TEXT
Designate the number of jails to create, all cloned from
the desired jail.
.El
.Pp
Examples:
.Pp
.Dl # iocage clone 38114a58 --name cloneexample1
.Pp
Clone jail 38114a58 and add the name cloneexample1 to the new jail.
.Pp
.Dl # iocage clone exampjail -c 3
Creates three jail clones of exampjail.
.Pp
.\" == CONSOLE ==
.It Cm console
Execute login to open a shell inside the jail.
.Pp
Options:
.Bl -tag -width "[-f | --force TEXT]"
.It Op Fl f | -force
Start the jail if it is not running.
.El
.Pp
Examples:
.Pp
.Dl # iocage console cloneexample1
.Pp
.Dl # iocage console -f jail1
.Pp
.\" == CREATE ==
.It Cm create
Deploy a new jail based on the host operating system's RELEASE.
The default can be overridden by specifying the RELEASE option.
A fully independent jail set is created by default.
.Pp
Options:
.Bl -tag -width "[-B | --clone_basejail]"
.It Op Fl b | -basejail
Create a new "basejail".
Basejails copy the RELEASE and mount the designated RELEASE
directories as nullfs mounts over the jail directories.
.It Op Fl c | -count Ar TEXT
Designate the number of jails to create, all cloned from
the desired
.Op Fl r Ar RELEASE .
.It Op Fl e | -empty
Create an empty jail for unsupported or custom jails.
.It Op Fl f | -force
Skip prompts, auto-confirming them with yes.
.It Op Fl n | -name Ar TEXT
Provide a NAME instead of a UUID for the new jail.
.It Op Fl p | -pkglist Ar TEXT
Specify a JSON file which manages the installation of each
package in the newly created jail.
.It Op Fl r | -release Ar TEXT
Specify which RELEASE to use for the new jail.
.It Op Fl r | -release Cm latest | Cm LATEST
Creat a new jail with the latest release available.
.It Op Fl s | -short
Use a short UUID of 8 characters instead of the default 36.
.It Op Fl t | -template Ar TEXT
Create a jail from the specified template.
.It Op Fl B | -clone_basejail
Create a new "clone basejail".
Clone basejails clone the RELEASE with ZFS and mount the designated
RELEASE directories as nullfs mounts over the jail directories.
.It Op Fl T | -thickjail
Thick jails are copies of the release, not clones.
.It Op Fl u | -uuid Ar TEXT
Specify a desired UUID for the new jail.
.El
.Pp
Examples:
.Pp
.Dl # iocage create -s -r 11.0-RELEASE
.Pp
Create a FreeBSD 11.0 jail with a shortened UUID.
.Pp
.Dl # iocage create -r 11.0-RELEASE -u 12345678
.Pp
Create a FreeBSD 11.0 jail with the custom UUID 12345678.
.Pp
.Dl # iocage create -c 3 -r 11.0-RELEASE -n examplejail
.Pp
This command creates three identical jails based off the
FreeBSD 11.0 RELEASE.
These jails are sequentially numbered  based on the
custom NAME.
.\" == DESTROY ==
.It Cm destroy
Destroy the specified jail.
Caution, this subcommand is irreversible.
.Cm destroy
only works with a stopped jail.
.Pp
Options:
.Bl -tag -width "[-d | --download]"
.It Op Fl R | -recursive
Skip the destroy children prompt.
This is best used with the
.Op Fl f | -force
option.
.It Op Fl d | -download
Also destroy the specified RELEASE download.
.It Op Fl f | -force
Destroy the jail with no further warnings or user input.
.It Op Fl r | -release
Destroy a specified RELEASE dataset.
.El
.Pp
Examples:
.Pp
.Dl # iocage destroy 12345678 -f
.Pp
Destroy the identified jail with no further input.
.Pp
.Dl # iocage destroy -r 10.1-RELEASE
.Pp
Destroy the downloaded FreeBSD 10.1 release.
.Pp
.\" == DF ==
.It Cm df
Show resource usage of all jails.
Invoking
.Cm df
displays a table with several fields:
.Pp
.Bl -tag -width "UUID" -compact -offset indent
.It UUID
unique jail ID
.It CRT
compression ratio
.It RES
reserved space
.It QTA
disk quota
.It USE
used space
.It AVA
available space
.It NAME
jail name
.El
.Pp
Options:
.Bl -tag -width "[-H | -h | --header]"
.It Op Fl H | h | -header
Use when scripting, using tabs for separators.
.It Op Fl l | -long
Shows the full UUID.
.It Op Fl s | -sort Ar TEXT
Sorts the list by the named type.
.El
.Pp
Example:
.Pp
.Dl # iocage df -l
.Pp
Displays the usage table with the full UUID of each jail.
.Pp
.\" == EXEC ==
.It Cm exec
Execute a command inside the specified jail.
This is an
.Nm
UUID/NAME wrapper for
.Xr jexec 8 .
After invoking
.Cm exec ,
specify the jail, any commands to run inside that jail, and any
arguments for those commands.
.Xr jexec
also runs commands similar to
.Nm .
When using
.Xr jexec
use the JID instead of the jail name.
For more info see the manual page for
.Xr jexec .
Use -- in front of the specified command to prevent iocage from parsing
them.
.Pp
Options:
.Bl -tag -width "[-u | --host_user NAME]"
.It Op Fl f | -force
Start the jail if it is not running.
.It Op Fl U | -jail_user Ar NAME
Specifies which jail user runs the command.
.It Op Fl u | -host_user Ar NAME
Specify which host user runs the command.
.El
.Pp
Examples:
.Pp
.Dl # iocage exec -f examplejail_1 ls /tmp
.Pp
Starts examplejail_1 and lists the contents of the
.Pa /tmp
directory.
.Pp
.Dl # iocage exec examplejail_1 "cat COPYRIGHT" | less
.Pp
In this example, examplejail_1 executes
.Cm cat COPYRIGHT ,
while the output is run with
.Cm less
outside the jail on the primary system.
.Pp
.\" == EXPORT ==
.It Cm export
Exports the specified jail.
An archive file is created in
.Pa /iocage/images
with an SHA256 checksum.
The jail must be stopped before exporting.
.Pp
Example:
.Pp
.Dl # iocage export examplejail_2
.Pp
.\" == FETCH ==
.It Cm fetch
Downloads and/or updates releases.
.Pp
.Cm fetch
must be executed as the first command on a pristine system.
The host node's RELEASE is downloaded for deployment.
If other releases are required, this can be changed by supplying the
required release property or selecting the appropriate RELEASE from
the menu list.
.Pp
Options:
.Bl -tag -width "[-plugins -official OPTIONS]"
.It Op Fl -accept
Accept the plugin's LICENSE agreement.
.It Op Fl -noaccept
Do not accept the plugin's LICENSE agreement.
.It Op Fl -plugins Ar OPTIONS
Fetch and create a plugin.
.It Op Fl -plugins Fl -official Ar OPTIONS
Fetch and create an official FreeNAS plugin.
.It Op Fl E | -eol
Enable End Of Life (EOL) checking upstream.
.It Op Fl F | -files Ar TEXT
Uses a local file directory for the root directory instead of HTTP.
.It Op Fl NE | -noeol
Disable EOL checking upstream.
.It Op Fl NU | -noupdate
Disable updating the fetch item to the latest patch level.
.It Op Fl NV | -noverify
Disable verifying the SSL cert for HTTP fetching.
.It Op Fl P | -plugin-file Ar TEXT
Specify which plugin file to use.
.It Op Fl U | -update
Update the fetch to the latest patch level.
.It Op Fl V | -verify
Enable verifying the SSL cert for HTTP fetching.
.It Op Fl a | -auth Ar TEXT
Specifies the authentication method for HTTP fetching.
Current values are basic and digest.
.It Op Fl c | -count Ar TEXT
Used when fetching a plugin.
This option creates the designated number of plugin type jails.
.It Op Fl d | -root-dir Ar TEXT
Specify the root directory containing all RELEASE files.
.It Op Fl f | -file
Use a local file directory for the root directory instead of HTTP.
.It Op Fl h | -http
No-op flag for backwords compatibility.
Previous versions of
.Nm
used this to adjust
.Op Fl s | -server
to define an HTTP server.
.It Op Fl p | -password Ar TEXT
Add a password, if required.
.It Op Fl r | -release Ar TEXT
Define the
.Fx
release to fetch.
.It Op Fl r Cm latest | Cm LATEST
Fetches the latest release.
.It Op Fl s | -server Ar TEXT
Define the server from which to fetch the RELEASE.
.It Op Fl u | -user Ar TEXT
Define the user.
.El
.Pp
Examples:
.Pp
.Dl # iocage fetch
.Pp
.Nm
lists available FreeBSD releases and asks which to download.
Enter the numeric option for the desired release, or type EXIT
to quit without downloading.
.Pp
.Dl # iocage fetch --release 10.3-RELEASE
.Pp
This tells
.Nm
to download and automatically update the FreeBSD 10.3 RELEASE.
This can also be used to apply the latest patches to an already
downloaded release.
Newly created jails or basejails are automatically updated.
.Pp
.Dl # iocage fetch -NE -r 11.0-RELEASE
.Pp
This disables the end of life check, then fetches the FreeBSD 11.0
release and updates with the latest patches.
.Pp
.Dl # iocage fetch -r LATEST
.Pp
This fetches the latest release available.
.\" == FSTAB ==
.It Cm fstab
Manipulates the fstab settings of a specific jail.
Name any options, then the jail, and finally all needed fstab strings.
.Pp
Options:
.Bl -tag -width "[-r | --remove | action]"
.It Op Fl H | h | -header
For scripting.
Use tabs for separators.
.It Op Fl R | -replace
Replace an entry by index number.
.It Op Fl a | -add | Cm action
Adds an entry to the specific jail's
.Pa fstab
and mounts it.
.It Op Fl e | -edit | Cm action
Opens the
.Pa fstab
file in the default editor.
.It Op Fl l | -list
List the jail's fstab.
.It Op Fl r | -remove | Cm action
Remove an entry from a specific jail's
.Pa fstab
and unmounts it.
.El
.Pp
Example:
.Pp
.Dl # iocage fstab -a example_jail_1 /usr/home /usr/home nullfs rw 0 0
.Pp
.\" == GET ==
.It Cm get
Display the specified property.
List the property, then the UUID or NAME of the jail to search.
.Pp
Options:
.Bl -tag -width "[-H | -h | --header]"
.It Op Fl H | h | -header
Used in scripting.
Use tabs for separators.
.It Op Fl P | -plugin Op Fl f | -force
Get the specified key for a plugin jail.
The
.Fl f | -force
option starts the jail if it is not already running.
.Fl f | -force
only works with
.Fl P | -plugin .
.It Op Fl a | -all
Get all properties for the specified jail.
If accessing a nested key, use "." as a separator.
.It Op Fl p | -pool
Get the currently activated zpool.
.It Op Fl r | -recursive
Get the specified property for all jails.
.It Op Fl s | Cm state
Return the state of the jail.
.It Op Fl j | Cm JID
Return the JID.
.El
.Pp
Examples:
.Pp
.Dl # iocage get -p
.Pp
Outputs the name of the activated zpool.
.Pp
.Dl # iocage get -a examplejail_1 | less
.Pp
List all properties of examplejail_1 and send the output
through
.Cm less .
.Pp
.Dl # iocage get -r dhcp
.Pp
Displays a table with each jail's UUID or NAME and the
status of the requested property.
.Pp
.Dl # iocage get -s examplejail_1
.Pp
Return whether the state of the jail is up or down.
.Pp
.\" == IMPORT ==
.It Cm import
Import a specific jail image.
Short UUIDs can be used, but do not specify the full filename, only
the UUID.
.Pp
Example:
.Pp
.Dl # iocage import 064c247
.Pp
.\" == LIST ==
.It Cm list
List the specified dataset type.
By default, all jails are listed.
.Pp
Options:
.Bl -tag -width "[-H | -h | --header]"
.It Op Fl -http
Changes
.Op Fl R | -remote
to use HTTP.
.It Op Fl H | h | -header
Used in scripting.
Use tabs for separators.
.It Op Fl P | -plugins
Shows plugins installed on the system.
.It Op Fl PRO
Lists official plugins available for download.
.It Op Fl R | -remote
Shows available RELEASE options for remote.
.It Op Fl b | r | -base | -release | Cm dataset_type
List all bases.
.It Op Fl l | -long
Shows JID, NAME, BOOT, STATE, TYPE, RELEASE, IP4, IP6, and
TEMPLATE information.
.It Op Fl q | -quick
Lists all jails with less processing and fields.
.It Op Fl s | -sort Ar TEXT
Sorts the list by the given type.
.It Op Fl t | -template | Cm dataset_type
Lists all templates.
.El
.Pp
Example:
.Pp
.Dl # iocage list
.Pp
Displays a table containing several elements for
each installed jail:
.Bl -tag -width "release"
.It JID
Jail identifier
.It UUID
Unique identifcation number.
.It STATE
Displays the active state of the jail.
Can be up or down.
.It NAME
The user assigned NAME.
.It RELEASE
The jail's FreeBSD RELEASE.
.It IP4
Shows the availability of IP4 addresses.
.El
.Pp
.\" == MIGRATE ==
.It Cm migrate
Migrate from the development version of iocage-legacy to the current
jail format.
.Pp
Options:
.Bl -tag -width "[-d | --delete]"
.It Op Fl d | -delete
Destroy the old dataset after migration.
.It Op Fl f | -force
Bypass any further warning or required user interaction.
.El
.Pp
Example:
.Pp
.Dl # iocage migrate -d -f
.Pp
Migrates to the new jail format and deletes the old dataset with
no further user interaction.
.Pp
.\" == PKG ==
.It Cm pkg
Run desired
.Cm pkg
commands in the specified jail.
List the jail's UUID or NAME, then any desired commands.
.Pp
.\" == RENAME ==
.It Cm rename
Rename the specified jail.
.Pp
Examples:
.Pp
.Dl # iocage rename jail1 NEWNAME
.Dl Jail: jail1 renamed to NEWNAME
.Pp
.\" == RESTART ==
.It Cm restart
Restart the specified jail, OR use ALL to restart all jails.
.Pp
Options:
.Bl -tag -width "[-s | --soft]"
.It Op Fl s | -soft
Restart the jail, but do not tear down the network stack.
.El
.Pp
Examples:
.Pp
.Dl # iocage restart ALL
.Pp
.Dl # iocage restart --soft examplejail1
.Pp
.\" == ROLLBACK ==
.It Cm rollback
Roll back a jail to an existing snapshot.
Any intermediate snapshots are destroyed in the process.
For more information on this functionality, please see
.Xr zfs 8 .
.Pp
Options:
.Bl -tag -width "[-f | --force]"
.It Op Fl f | -force
Run the command, skipping any warnings or further user interaction.
.It Fl n | -name Ar TEXT
[Required] Used to specify the snapshot name.
.El
.Pp
Example:
.Pp
.Dl # iocage rollback -n snapshottest2 examplejail1
.Pp
.\" == SET ==
.It Cm set
Set the specified properties in the desired jail.
Type the desired properties separated by a space, then the jail
UUID or NAME to apply the changes.
.Pp
Options:
.Bl -tag -width "[-P | --plugin]"
.It Op Fl P | -plugin Ar KEY
Set the specified key for a plugin jail.
If accessing a nested key, use "." as a separator.
.El
.Pp
Examples:
.Pp
.Dl # iocage set boot=1 notes="Example note." testjail -P foo.bar.baz=VALUE PLUGIN
.Pp
.\" == SNAPLIST ==
.It Cm snaplist
List snapshots of a jail.
A number of different fields are displayed:
.Pp
.Bl -tag -width "CREATED" -compact -offset indent
.It NAME
snapshot name
.It CREATED
creation time
.It RSIZE
referenced size
.It USED
used space
.El
.Pp
Options:
.Bl -tag -width "[-H | -h | --delete]"
.It Op Fl H | h | -header
Used for scripting.
Tabs are used as separators.
.It Op Fl l | -long
Show the full dataset path for the snapshot.
.It Op Fl s | -sort Cm TYPE
Sort the returned list by the named TYPE.
.El
.Pp
Example:
.Pp
.Dl # iocage snaplist examplejail1
.Pp
.Dl # iocage snaplist FOO -s name
.Pp
.\" == SNAPREMOVE ==
.It Cm snapremove
Delete snapshots of the specified jail.
If the keyword
.Op Ar ALL
is used, all snapshots the specified jail are deleted.
.Pp
Options:
.Bl -tag -width "[-n | --name]"
.It Op Fl n | -name Ar TEXT
[Required] The snapshot name.
.El
.Pp
Example:
.Pp
.Dl # iocage snapremove -n snapshottest1 examplejail1
.Pp
.\" == SNAPSHOT ==
.It Cm snapshot
Create a ZFS snapshot of the specified jail.
If a snapshot name is not specified, a name based on the current
date and time is generated.
.Pp
Options:
.Bl -tag -width "[-n | --name TEXT]"
.It Op Fl n | -name Ar TEXT
The user created snapshot name.
.El
.Pp
Example:
.Pp
.Dl # iocage snapshot examplejail1 -n snapshottest1
.Pp
.\" == START ==
.It Cm start
Start a jail identified by
.Ar UUID
or
.Ar NAME .
Use
.Op Ar ALL
to start all installed jails instead.
.Pp
Options:
.Bl -tag -width "[--rc]"
.It Op Fl -rc
Start all jails with boot=1 in a specific order.
Jails with lower priority start first.
.El
.Pp
Example:
.Pp
.Dl # iocage start examplejail1
.Pp
.\" == STOP ==
.It Cm stop
Stop a jail identified by
.Ar UUID
or
.Ar NAME .
Use
.Op Ar ALL
to stop all active jails instead.
.Pp
Options:
.Bl -tag -width "[--rc]"
.It Op Fl -rc
Stop all jails with boot=1 in a specific order.
Jails with higher priority values stop first.
.El
.Pp
Example:
.Pp
.Dl # iocage stop 6ffe99a9
.Pp
Stop the jail identified by the shortened UUID.
.Pp
.\" == UPDATE ==
.It Cm update
Runs
.Cm freebsd-update
to update the specified jail to the latest patch level.
.Pp
Example:
.Pp
.Dl # iocage update examplejail1
.Pp
.\" == UPGRADE ==
.It Cm upgrade
Runs
.Cm freebsd-update
to upgrade a jail RELEASE to the specified RELEASE.
A backup snapshot is automatically created to provide a rollback option.
.Pp
Options:
.Bl -tag -width "[-r | --release RELEASE]"
.It Op Fl r | -release Ar RELEASE
[Required] RELEASE the jail uses for upgrading.
.El
.Pp
Example:
.Pp
.Dl # iocage upgrade examplejail2 -r 11.0-RELEASE
.Pp
To upgrade, the release must be locally available.
.Pp
.Sh PROPERTIES
The Source listed with each property shows whether it is a local
.Nm
property or where more information can be located.
Boolean properties are listed with
.Op 1 | 0
as the options, but
.Nm
also accepts
.Op yes | no ,
.Op true | false ,
or
.Op on | off .
.Bl -tag -width "pkglist=none"
.It Pf assign_localhost= Op 1 | 0
Boolean option to add interface lo0 and assign it the first available
localhost address, starting with
.Ql 127.0.0.2 .
Only used when
.Ql vnet=0 .
Jails using VNET configure a localhost as part of their virtualized
network stack.
.Pp
Default:
.Ql 0
.Pp
Source: local
.It Pf localhost_ip= Dq 123.456.7.8
Only applies when
.Ql vnet=0
and
.Ql assign_localhost=1 .
Assign the jail localhost IP address to a custom IP address instead
of the first available 
.Dq 127.0.0.#
address.
.Nm
checks for active jail IP addresses and warns when another jail is
using the requested IP address.
.Pp
Source: local
.It Pf bpf= Op 1 | 0
Toggle starting the jail with Berkely Packet Filter devices enabled.
.Pp
Default: 0
.Pp
Source: local
.It Pf depends= Dq none | foo bar
Require another jail to start before starting this jail.
Space delimited.
The option nests, resulting in dependent jails waiting in turn for
their dependents, if specified, to start.
.Pp
Default:
.Dq none
.Pp
Source: local
.It Pf dhcp= Op 1 | 0
This controls starting the jail with the Dynamic Host Configuration
Protocol enabled.
To enable dhcp, vnet and bpf must also be enabled.
.Pp
Default: 0
.Pp
Source: local
.It Pf pkglist= Op none | path-to-file
A json file listing one package per entry.
Packages are automatically installed when a jail is created.
Works only in combination with the
.Cm create
subcommand.
.Pp
Default: none
.Pp
Source: local
.It Pf vnet= Op 1 | 0
Controls whether the jail is started with a VNET or a shared IP
configuration.
Set to on if a fully virtualized per-jail network stack is required.
.Pp
Default: 0
.Pp
Source: local
.It Pf ip_hostname= Op 1 | 0
A boolean option for using DNS records during jail IP configuration.
.Xr jail 8
pulls the first IPv4 or IPv6 addresses from the resolver and applies
them to the jail.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It ip4_addr="interface|ip-address/netmask"
The IPv4 address for VNET and shared IP jails.
.Pp
Single interface format:
.Pp
interface|ip-address/netmask
.Pp
Multiple interface format:
.Pp
interface|ip-address/netmask,interface|ip-address/netmask
.Pp
PTP interface format:
.Pp
interface|local-address remote-address
.Pp
On shared IP jails, an interface name given before the IP address
adds an alias to that interface.
.Pp
A netmask in either dotted-quad or CIDR form given after the IP
address is used when adding the IP alias.
.Pp
In VNET jails, the interface is configured with the IP addresses
listed.
.Pp
Example:
.Bd -literal -offset indent
"vnet0|192.168.0.10/24,vnet1|10.1.1.10/24"
.Ed
.Pp
Interfaces vnet0 and vnet1 are configured in a VNET jail.
In this case, no network configuration is necessary in the jail's
.Pa rc.conf
file.
.Pp
Default: none
.Pp
Source:
.Xr jail 8
.It Pf ip4_saddrsel= Op 1 | 0
Only applies when vnet=0.
A boolean option to change the formerly mentioned behavior and
disable IPv4 source address selection for the prison in favor of
the primary IPv4 address of the jail.
Source address selection is enabled by default for all jails and
the ip4_nosaddrsel settting of a parent jail is not inherited for
any child jails.
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It Pf ip4= Op new | disable | inherit
Only applies when vnet=0.
Control the availability of IPv4 addresses.
Possible values are "inherit" to allow unrestricted access to all
system addresses, "new" to restrict addresses via ip4_addr above,
and "disable" to stop the jail from using IPv4 entirely.
Setting the ip4_addr parameter implies a value of "new".
.Pp
Default: new
.Pp
Source:
.Xr jail 8
.It Pf defaultrouter= Op none | ipaddress
Setting this property to anything other than none configures a
default route inside a VNET jail.
.It Pf defaultrouter6= Op none | ip6address
Setting this property to anything other than none configures a
default IPv6 route inside a VNET jail.
.It Pf resolver= Op none | nameserver IP;nameserver IP;search domain.local
Set the jail's resolver
.Pq resolv.conf .
Fields must be delimited with a semicolon.
Semicolons are translated to newlines in
.Pa resolv.conf .
.Pp
If the resolver is set to none (default) the jail inherits the
.Pa resolv.conf
file from the host.
.It ip6_addr, ip6_saddrsel, ip6
A set of IPv6 options for the prison, the counterparts to ip4_addr,
ip4_saddrsel and ip4 above.
.It Pf interfaces= Op vnet0:bridge0,vnet1:bridge1 | vnet0:bridge0
By default, there are two interfaces specified with their bridge
association.
Up to four interfaces are supported.
Interface configurations are separated by commas.
The format is interface:bridge, where the left value is the virtual
VNET interface name and the right value is the bridge name where the
virtual interface should be attached.
.Pp
Default: vnet0:bridge0,vnet1:bridge1
.Pp
Source: local
.It host_domainname=
The NIS domain name of the jail.
.Pp
Default: none
.Pp
Source:
.Xr jail 8
.It host_hostname=UUID
The hostname of the jail.
.Pp
Default: UUID
.Pp
Source:
.Xr jail 8
.It Pf host_time= Op 1 |0
When active, copies the host
.Pa /etc/localtime
into the jail when the jail boots.
.Pp
Default: 1
.Pp
Source: local
.It Pf exec_fib= Op 0 | 1 ..
The FIB (routing table) to set when running commands inside the jail.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf devfs_ruleset= Op 4 | 0 ..
The number of the devfs ruleset that is enforced for mounting
devfs in this jail.
A value of zero (default) means no ruleset is enforced.
Descendent jails inherit the parent jail's devfs ruleset enforcement.
Mounting devfs inside a jail is possible only if the allow_mount and
allow_mount_devfs permissions are effective and enforce_statfs is set
to a value lower than 2.
Devfs rules and rulesets cannot be viewed or modified from inside a
jail.
.Pp
NOTE: It is important that only appropriate device nodes in devfs
be exposed to a jail.
Access to disk devices in the jail may permit processes in the jail
to bypass the jail sandboxing by modifying files outside of the jail.
See
.Xr devfs 8
for information on how to use devfs rules to limit access to entries
in the per-jail devfs.
A simple devfs ruleset for jails is available as ruleset 4 in
.Pa /etc/defaults/devfs.rules
.Pp
Default: 4
.Pp
Source:
.Xr jail 8
.It Pf mount_devfs= Op  1 | 0
Mount a
.Xr devfs 5
filesystem on the chrooted
.Pa /dev
directory, and apply the ruleset in the devfs_ruleset parameter (or
a default of ruleset 4: devfsrules_jail) to restrict the devices
visible inside the jail.
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It exec_created="/usr/bin/true"
Commands to run in the system environment after creating a jail but
before commands or services run inside that jail.
.Pp
Default: /usr/bin/true
.Pp
Source:
.Xr jail 8
.It exec_start="/bin/sh /etc/rc"
Commands to run in the prison environment when a jail is created.
A typical command to run is
.Cm sh /etc/rc
.Pp
Default: /bin/sh /etc/rc
.Pp
Source:
.Xr jail 8
.It exec_stop="/bin/sh /etc/rc.shutdown"
Commands to run in the prison environment before a jail is
removed and after any exec_prestop commands have completed.
A typical command to run is
.Cm sh /etc/rc.shutdown
.Pp
Default: /bin/sh /etc/rc.shutdown
.Pp
Source:
.Xr jail 8
.It exec_prestart="/usr/bin/true"
Commands to run in the system environment before a jail is started.
.Pp
Default: /usr/bin/true
.Pp
Source:
.Xr jail 8
.It exec_prestop="/usr/bin/true"
Commands to run in the system environment before a jail is stopped.
.Pp
Default: /usr/bin/true
.Pp
Source:
.Xr jail 8
.It exec_poststop="/usr/bin/true"
Commands to run in the system environment after a jail is stopped.
.Pp
Default: /usr/bin/true
.Pp
Source:
.Xr jail 8
.It exec_poststart="/usr/bin/true"
Commands to run in the system environment after a jail is started,
and after any exec_start commands have completed.
.Pp
Default: /usr/bin/true
.Pp
Source:
.Xr jail 8
.It Pf exec_clean= Op 1 | 0
Run commands in a clean environment.
The environment is discarded except for HOME, SHELL, TERM and USER.
HOME and SHELL are set to the target login's default values.
USER is set to the target login.
TERM is imported from the current environment.
The environment variables from the login class capability database
for the target login are also set.
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It Pf exec_timeout= Op 60 | 30 ..
The maximum amount of time to wait for a command to complete.
If a command is still running after this many seconds have passed,
the jail will be terminated.
.Pp
Default: 60
.Pp
Source:
.Xr jail 8
.It Pf stop_timeout= Op 30 | 60 ..
The maximum amount of time to wait for a jail's processes to
exit after sending them a SIGTERM signal.
This happens after the exec_stop commands have completed.
After this many seconds have passed, the jail is removed, killing any
remaining processes.
If this is set to zero, no SIGTERM is sent and the prison is
immediately removed.
.Pp
Default: 30
.Pp
Source:
.Xr jail 8
.It Pf exec_jail_user= Op root | username
In the jail environment, commands are run as this user.
.Pp
Default: root
.Pp
Source:
.Xr jail 8
.It Pf exec_system_jail_user= Op 1 | 0
This boolean option looks for the
.Dv exec_jail_user
in the system
.Xr passwd 5
file rather than the jail's file.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf exec_system_user= Op root | username
Run commands as this user in the system environment.
The default is to run commands as the current user.
.Pp
Default: root
.Pp
Source:
.Xr jail 8
.It Pf mount_fdescfs= Op 1 | 0
Mount a
.Xr fdescfs 5
filesystem in the jail's
.Pa /dev/fd
directory.
Note: This is not supported on
.Fx 9.3 .
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It Pf mount_procfs= Op 1 | 0
Mount a
.Xr procfs 5
filesystem in the jail's
.Pa /dev/proc
directory.
.Pp
Default: 0
.Pp
Source: local
.It Pf enforce_statfs= Op 2 | 1 | 0
Determine which information processes in a jail are able to obtain
about mount points.
The behavior of these syscalls is affected:
.Xr statfs 2 ,
.Xr fstatfs 2 ,
.Xr getfsstat 2 ,
and
.Xr fhstatfs 2
as well as similar compatibility syscalls.
When set to 0, all mount points are available without any
restrictions.
When set to 1, only mount points below the jail's chroot directory
are visible.
Additionaly, the path to the jail's chroot directory is removed
from the front of their pathnames.
When set to 2 (default), the syscalls above can operate only on a
mountpoint where the jail's chroot directory is located.
.Pp
Default: 2
.Pp
Source:
.Xr jail 8
.It Pf children_max= Op 0 | ..
The number of child jails allowed to be created by this jail (or
by other jails under this jail).
This limit is zero by default, indicating the jail is not allowed to
create child jails.
See the Hierarchical Jails section for more information in
.Xr jail 8 .
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It login_flags="-f root"
These flags are passed to
.Xr login 1
when logging in to jails with the console function.
.Pp
Default: -f root
.Pp
Source:
.Xr login 1
.It Pf jail_zfs= Op 1 | 0
Enable automatic ZFS jailing inside the jail.
The assigned ZFS dataset is fully controlled by the jail.
.Pp
NOTE: Setting this to 1 automatically sets
.Ql allow_mount=1 ,
.Ql enforce_statfs=1 ,
and
.Ql allow_mount_zfs=1 !
These are dependent options required for ZFS management inside a jail.
.Pp
Default: 0
.Pp
Source: local
.It Pf jail_zfs_dataset= Op iocage/jails/UUID/root/data | zfs_filesystem
The dataset to be jailed and fully handed over to a jail.
Takes the ZFS filesystem name without pool name.
.Pp
NOTE: only valid when
.Ql jail_zfs=1.
By default, the mountpoint is set to
.Pa none .
To mount this dataset, set its mountpoint inside the jail.
For example,
.Bd -literal -offset indent
zfs set mountpoint=/data full-dataset-name
mount -a
.Ed
.Pp
Default:
.Pa iocage/jails/UUID/root/data
.Pp
Source: local
.It Pf securelevel= Op 3 | 2 | 1 | 0 | -1
The value of the jail's kern.securelevel sysctl.
A jail never has a lower securelevel than the default system, but by
setting this parameter it is allowed to have a higher one.
If the system securelevel is changed, any jail securelevels will be at
least as secure.
.Pp
Default: 2
.Pp
Source:
.Xr jail 8
.It Pf allow_set_hostname= Op 1 | 0
Allow the jail's hostname to be changed with
.Xr hostname 1
or
.Xr sethostname 3 .
.Pp
Default: 1
.Pp
Source:
.Xr jail 8
.It Pf allow_sysvipc= Op 1 | 0
Set whether a process in the jail has access to System V IPC
primitives.
Prior to FreeBSD 11.0, System V primitives share a single namespace
across the host and jail environments, meaning that processes within a
jail would be able to communicate with, and potentially interfere
with, processes outside of the jail, or in other jails.
In
.Fx 11.0
and later, this setting is deprecated.
Use sysvmsg, sysvsem, and sysvshm instead.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf sysvmsg= Op disable | inherit | new
Allow access to SYSV IPC message primitives.
When set to inherit, all IPC objects on the system are visible to this
jail, whether they were created by the jail itself, the base system,
or other jails.
When set to new, the jail has its own key namespace, and can only see
the objects that it has created.
The system or parent jail has access to the jail's objects, but not to
its keys.
When set to disable, the jail cannot perform any sysvmsg-related
system calls.
Ignored in
.Fx
10.3 and earlier.
.Pp
Default: new
.Pp
Source:
.Xr jail 8
.It Pf sysvsem= Op disable | inherit | new
Allow access to SYSV IPC semaphore primitives in the same manner as
sysvmsg.
Ignored in
.Fx
10.3 and earlier.
.Pp
Default: new
.Pp
Source:
.Xr jail 8
.It Pf sysvshm= Op disable | inherit | new
Allow access to SYSV IPC shared memory primitives in the same manner
as sysvmsg.
Ignored in
.Fx 10.3
and earlier.
.Pp
Default: new
.Pp
Source:
.Xr jail 8
.It Pf allow_raw_sockets= Op 1 | 0
The prison root is allowed to create raw sockets.
Setting this parameter allows utilities like
.Xr ping 8
and
.Xr traceroute 8
to operate inside the prison.
If set, the source IP addresses are enforced to comply with the IP
address bound to the jail, regardless of whether the IP_HDRINCL flag
has been set on the socket.
Since raw sockets can be used to configure and interact with various
network subsystems, extra caution should be used where privileged
access to jails is given out to untrusted parties.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_chflags= Op 1 | 0
Normally, privileged users inside a jail are treated as unprivileged
by
.Xr chflags 2 .
When this parameter is set, such users are treated as privileged, and
can manipulate system file flags subject to the usual constraints on
kern.securelevel.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_mount= Op 1 | 0
Allow privileged users inside the jail to mount and unmount filesystem
types marked as jail-friendly.
The
.Xr lsvfs 1
command can be used to find filesystem types available for mount from
within a jail.
This permission is effective only if enforce_statfs is set to a value
lower than 2.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_mount_devfs= Op 1 | 0
Allow privileged users inside the jail to mount and unmount the devfs
file system.
This permission is effective only together with allow.mount and if
enforce_statfs is set to a value lower than 2.
Please consider restricting the devfs ruleset with the
devfs_ruleset option.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_mount_fusefs= Op 1 | 0
Allow privileged users inside the jail to mount and unmount fusefs file
systems.
This permission is effective only together with allow_mount and if
enforce_statfs is set to a value lower than 2.
.Pp
Note: This requires FreeBSD 12.0 or later.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_mount_nullfs= Op 1 | 0
Allow privileged users inside the jail to mount and unmount the nullfs
file system.
This permission is effective only together with allow_mount and if
enforce_statfs is set to a value lower than 2.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_mount_procfs= Op 1 | 0
Allow privileged users inside the jail to mount and unmount the procfs
file system.
This permission is effective only together with allow.mount and if
enforce_statfs is set to a value lower than 2.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_mount_tmpfs= Op 1 | 0
Allow privileged users inside the jail to mount and unmount the tmpfs
file system.
This permission is effective only together with allow.mount and if
enforce_statfs is set to a value lower than 2.
.Pp
Note: This is not supported on FreeBSD 9.3.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_mount_zfs= Op 1 | 0
Allow privileged users inside the jail to mount and unmount the ZFS
filesystem.
This permission is effective only together with allow.mount and if
.Dv enforce_statfs
is set to a value lower than 2.
See
.Xr zfs 8
for information on how to configure the ZFS filesystem to operate from
within a jail.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_quotas= Op 1 | 0
The jail root can administer quotas on the jail's filesystems.
This includes filesystems that the jail might share with other jails
or with non-jailed parts of the system.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_socket_af= Op 1 | 0
Sockets within a jail are normally restricted to IPv4, IPv6, local
(UNIX), and route.
This setting allows access to other protocol stacks that have not had
jail functionality added to them.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It Pf allow_tun= Op 1 | 0
Unhides tun devices for the jail with an individual devfsruleset.
Allows the creation of tuns in the jail.
.Pp
Default: 0
.It Pf allow_mlock= Op 1 | 0
Enables running services that require
.Cm mlock
in a jail.
.Pp
Default: 0
.Pp
Source:
.Xr mlock 2
.It Pf allow_vmm= Op 1 | 0
Allow access to
.Xr vmm 4
inside the jail. The
.Xr vmm 4
kernel module must be loaded for this to take effect.
.Pp
Note: This requires
.Fx 12.0
or later.
.Pp
Default: 0
.Pp
Source:
.Xr jail 8
.It host_hostuuid=UUID
.Pp
Default: UUID
.Pp
Source:
.Xr jail 8
.It name="any string"
Custom string for aliasing jails.
.Pp
Default: UUID
.Pp
Source: local
.It Pf template= Op 1 | 0
This property controls whether the jail is a template.
Templates are not started by iocage.
Set to 1 if this jail will be converted into a template.
See the EXAMPLES section below.
.Pp
Default: 0
.Pp
Source: local
.It Pf boot= Op 1 | 0
If set to 1,
the jail is auto-started at boot time with
.Cm start --rc
and stopped at shutdown time with
.Cm stop --rc .
Jails are started and stopped based on their priority value.
If boot=1 is added to the create command, the jail is
started after creation
.Pp
Default: 0
.Pp
Source: local
.It notes="any string"
Custom notes for miscellaneous tagging.
.Pp
Default: none
.Pp
Source: local
.It owner=root
The owner of the jail.
Can be any string.
.Pp
Default: root
.Pp
Source: local
.It Pf priority= Op 99 | 50 ..
Start priority at boot time.
Smaller values mean higher priority.
For shutdown, the order is reversed.
.Pp
Default: 99.
.Pp
Source: local
.It last_started
Last successful start time.
Automatically set every time the jail starts.
.Pp
Default: timestamp
.Pp
Source: local
.It Pf type= Op basejail | empty | normal
Set the jail type to basejail, empty or normal.
.Pp
Default: normal
.Pp
Source: local
.It Pf release= Op 11.0-RELEASE | 10.3-RELEASE
The release used at creation time.
Can be set to any string if needed.
.Pp
Default: the host's release
.Pp
Source: local
.It Pf compression= Op on | off Op lzjb | gzip | gzip-N | zle | lz4
Controls the compression algorithm used for this dataset.
The lzjb compression algorithm is optimized for performance while
providing decent data compression.
Setting compression to on uses the lzjb compression algorithm.
The gzip algorithm uses the same compression as the
.Xr gzip 1
command.
The compression level can be specified by using the value gzip-N,
where N is an integer from 1 (fastest) to 9 (best compression
ratio).
Currently, gzip is equivalent to gzip-6, which is also the default for
.Xr gzip 1 .
.Pp
The zle algorithm compresses runs of zeros.
.Pp
The lz4 algorithm is a high-performance replacement for the lzjb
algorithm.
It features significantly faster compression and decompression and a
moderately higher compression ratio than lzjb, but can only be used on
pools with the lz4_compress feature enabled.
See
.Xr zpool-features 7
for details on ZFS feature flags and the lz4_compress feature.
.Pp
This property can also be referred to by its shortened column name of
"compress".
.Pp
Changing this property affects only newly-written data.
.Pp
Default: lz4
.Pp
Source:
.Xr zfs 8
.It origin
This is only set for clones and is read-only.
For cloned file systems or volumes, the snapshot from which the clone
was created.
See the clones property.
.Pp
Default: -
.Pp
Source:
.Xr zfs 8
.It Pf quota= Op 15G | 50G | ..
Quota for the jail.
Limit the amount of space a dataset and its descendants can consume.
This property enforces a hard limit on the amount of space used.
This includes all space consumed by descendants, including file
systems and snapshots.
Setting a quota on a descendent of a dataset that already has a quota
does not override the ancestor's quota, but rather imposes an
additional limit.
.Pp
Default: none
.Pp
Source:
.Xr zfs 8
.It mountpoint
Path for the jail's root filesystem.
Do not tweak this or the jail will not start!
.Pp
Default: set to jail's root
.Pp
Source:
.Xr zfs 8
.It compressratio
Compression ratio.
Read-only.
For non-snapshots, the compression ratio achieved for the used space
of this dataset, expressed as a multiplier.
The used property includes descendant datasets, and, for clones, does
not include the space shared with the origin snapshot.
.Pp
Source:
.Xr zfs 8
.It available
Available space in the jail's dataset.
The amount of space available to the dataset and all its children,
assuming that there is no other activity in the pool.
Because space is shared within a pool, availability can be limited by
any number of factors, including physical pool size, quotas,
reservations, or other datasets within the pool.
.Pp
Source:
.Xr zfs 8
.It used
Space used by jail.
Read-only.
.Pp
Source:
.Xr zfs 8
.It Pf dedup= Op on | off Op verify | sha256[,verify]
Deduplication for jail.
.Pp
Default: off
.Pp
Source:
.Xr zfs 8
.It Pf reservation= Op size | none
Reserved space for jail.
.Pp
Default: none
.Pp
Source:
.Xr zfs 8
.It sync_target
This is for future use, currently not supported.
.It sync_tgt_zpool
For future use, currently not supported.
.It Pf cpuset= Op 1 | 1,2,3,4 | 1-2 | off
.Pp
Control the jail's CPU affinity.
.Pp
Default: off
.Pp
Source:
.Xr cpuset 1
.It vnet_interfaces
A space delimited list of network interfaces to give to a VNET-enabled
jail after it is created.
Interfaces are automatically released when the jail is removed.
.Pp
Default: none
.Pp
Source:
.Xr jail(8)
.It Pf vnet_default_interface= Op none | Ar INTERFACE
Default network interface used for the VNET bridge interface in the jail.
Only takes effect when VNET is set.
.Pp
Default: none
.It hostid_strict_check Op 1 | 0
Check the hostid property of the jail.
If not the same as the host, do not start the jail.
.Pp
Default: 0
.El
.Sh EXAMPLES
Set up
.Nm
from scratch:
.Bd -literal -offset indent
iocage fetch
.Ed
.Pp
Create first jail:
.Bd -literal -offset indent
iocage create -r 11.0-RELEASE -n myjail
.Ed
.Pp
List jails:
.Bd -literal -offset indent
iocage list
.Ed
.Pp
Start jail:
.Bd -literal -offset indent
iocage start UUID
.Ed
.Pp
Convert jail into template:
.Bd -literal -offset indent
iocage set template=yes UUID
.Ed
.Pp
List templates:
.Bd -literal -offset indent
iocage list -t
.Ed
.Pp
Import package on another host:
.Bd -literal -offset indent
iocage import UUID
.Ed
.Sh HINTS
By default,
.Nm
doesn't have colors enabled.
Set the environment variable IOCAGE_COLOR=TRUE to enable this
experimental feature.
.Pp
When using VNET and an outside connection is needed, add the node's
physical NIC into one of the bridges.
Also see
.Xr bridge 4
for how traffic is handled.
Basically, bridges behave like a network switch.
.Pp
IPFW and PF are fully supported inside a VNET jail.
.Pp
The actual jail name in the
.Xr jls 8
output is set to ioc-UUID.
This is a required workaround as jails refuse to start with
.Xr jail 8
when the jail name starts with a "0".
.Pp
.Xr dmesg 8
information leakage inside jails can be prevented with this sysctl:
.Bd -literal -offset indent
security.bsd.unprivileged_read_msgbuf=0
.Ed
.Pp
When using VNET, consider applying these sysctls as well:
.Bd -literal -offset indent
net.inet.ip.forwarding=1
net.link.bridge.pfil_onlyip=0
net.link.bridge.pfil_bridge=0
net.link.bridge.pfil_member=0
.Ed
.Pp
See
.Lk https://github.com/iocage/iocage
for more information.
.Sh SEE ALSO
.Xr cpuset 1 ,
.Xr bridge 4 ,
.Xr epair 4 ,
.Xr freebsd-update 8 ,
.Xr ifconfig 8 ,
.Xr jail 8 ,
.Xr jexec 8 ,
.Xr rctl 8 ,
.Xr sysctl 8 ,
.Xr zfs 8 ,
.Xr zpool 8 ,
.Xr VNET 9
.Sh BUGS
Please report bugs, issues, and feature requests to
.Lk https://github.com/iocage/iocage/issues
.Sh AUTHORS
.Nm
was developed by
.An -nosplit
.An Peter Toth,
.An Brandon Schneider,
and
.An Stefan Gronke .
.Pp
This manual page was written by
.An Warren Block,
.An Tim Moore,
.An Peter Toth,
and
.An Brandon Schneider .
.Sh SPECIAL THANKS
Sichendra Bista - for his ever willing attitude and ideas.
